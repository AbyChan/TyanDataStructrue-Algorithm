Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        if(head == null){
            return null;
        }
        if(n == 0){
            return head;
        }
        int k = 1;
        ListNode node = head;
        while(node.next != null){
            node = node.next;
            k++;
        }
        n = n%k;
        if(n == 0){
            return head;
        }
        ListNode cur = head;
        for(int i=0; i<k-n-1; i++){
            cur = cur.next;
        }
        ListNode rst = cur.next;
        node.next = head;
        cur.next = null;
        return rst;
    }
}
